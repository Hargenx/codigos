@startuml exemplo_polimorfismo
' Classe abstrata Funcionario
abstract class Funcionario {
  - nome: String
  + Funcionario(nome: String)
  + servico(): void
  + calcularSalario(): double
}

' Classe Desenvolvedor que herda de Funcionario
class Desenvolvedor {
  - salarioBase: double
  - horasExtras: int
  - taxaHoraExtra: double
  + Desenvolvedor(nome: String, salarioBase: double, horasExtras: int, taxaHoraExtra: double)
  + servico(): void
  + calcularSalario(): double
}

' Classe Gerente que herda de Funcionario
class Gerente {
  - salarioBase: double
  - bonus: double
  + Gerente(nome: String, salarioBase: double, bonus: double)
  + servico(): void
  + calcularSalario(): double
}

' Classe Estagiario que herda de Funcionario
class Estagiario {
  - estipendio: double
  + Estagiario(nome: String, estipendio: double)
  + servico(): void
  + calcularSalario(): double
}

' Classe principal para execução
class PolimorfismoExemplo {
  + main(String[] args): void
}

' Relacionomentos de herança
Funcionario <|-- Desenvolvedor
Funcionario <|-- Gerente
Funcionario <|-- Estagiario

' Associação de uso: a classe principal utiliza Funcionario
PolimorfismoExemplo ..> Funcionario : usa
@enduml
